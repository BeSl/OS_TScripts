// При подключении библиотеки необходиомо указать путь к каталогу TMSSQL с библиотекой TMSSQL.
// Путь указывается относительно расположения данного файла.
#Использовать "..\TMSSQL" 

//*****************************************************************
Процедура ПолныйТестВсехПроцедур(УправлениеMSSQL)

	БылиОшибки = Ложь;
	
	// Получим список файлов базы данных
	ТаблицаФайловБД = УправлениеMSSQL.ПолучитьСтруктуруФайловБД(); 
	Если ТаблицаФайловБД <> Неопределено Тогда
		Сообщить("ПолучитьСтруктуруФайловБД: УСПЕШНО");
		Для Каждого ФайлБД Из ТаблицаФайловБД Цикл
			Сообщить("	Имя: " + ФайлБД.ЛогическоеИмя + ", Путь: " + ФайлБД.ФизическоеИмя + ", тип: " + ФайлБД.Тип + ", размер: " + ФайлБД.Размер + " Мб.");
		КонецЦикла;
	Иначе
		Сообщить("ПолучитьСтруктуруФайловБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Сменим модель восстановления базы на полную
	Если УправлениеMSSQL.ИзменитьМодельВосстановленияБД("FULL") Тогда
		Сообщить("ИзменитьМодельВосстановленияБД: УСПЕШНО");
	Иначе
		Сообщить("ИзменитьМодельВосстановленияБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;	

	// Сделаем полную резервную копию
	ПолноеИмяФайла = УправлениеMSSQL.СделатьРезервнуюКопиюБД("E:\VION\ТЕСТ",,"FULL");
	Если ПолноеИмяФайла <> Неопределено Тогда
		Сообщить("СделатьРезервнуюКопиюБД: УСПЕШНО в " + ПолноеИмяФайла);
	Иначе
		Сообщить("СделатьРезервнуюКопиюБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;
	ДатаПолнойКопии = ТекущаяДата();
	Приостановить(6000);

	// Сделаем разностную резервную копию
	ПолноеИмяФайла = УправлениеMSSQL.СделатьРезервнуюКопиюБД("E:\VION\ТЕСТ",,"DIFFERENTIAL");
	Если ПолноеИмяФайла <> Неопределено Тогда
		Сообщить("СделатьРезервнуюКопиюБД: УСПЕШНО в " + ПолноеИмяФайла);
	Иначе
		Сообщить("СделатьРезервнуюКопиюБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;
	Приостановить(6000);

	// Сделем копию журнала транзакций
	ПолноеИмяФайла = УправлениеMSSQL.СделатьРезервнуюКопиюБД("E:\VION\ТЕСТ",,"LOG");
	Если ПолноеИмяФайла <> Неопределено Тогда
		Сообщить("СделатьРезервнуюКопиюБД: УСПЕШНО в " + ПолноеИмяФайла);
	Иначе
		Сообщить("СделатьРезервнуюКопиюБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;
	Приостановить(6000);
	
	// Восстаноим базу на дату создания полной копии
	Если УправлениеMSSQL.ВосстановитьБД(ДатаПолнойКопии) Тогда
		Сообщить("ВосстановитьБД: УСПЕШНО");
	Иначе
		Сообщить("ВосстановитьБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Получим список файлов для восстановления на текущую дату
	МассивФайлов = УправлениеMSSQL.ПолучитьСписокФайловДляВосстановленияБД(); 
	Если МассивФайлов <> Неопределено Тогда
		Сообщить("ПолучитьСписокФайловДляВосстановленияБД: УСПЕШНО");
		Для Сч = 0 По МассивФайлов.Количество()-1 Цикл
			Сообщить("	Файл: " + МассивФайлов.Получить(Сч));
		КонецЦикла;
	Иначе
		Сообщить("ПолучитьСписокФайловДляВосстановленияБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Восстановим базу данных по полученнуму ранее массиву файлов
	Если УправлениеMSSQL.ВосстановитьИзРезервнойКопииБД(МассивФайлов) Тогда
		Сообщить("ВосстановитьИзРезервнойКопииБД: УСПЕШНО");
	Иначе
		Сообщить("ВосстановитьИзРезервнойКопииБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Переведем базу в простую модель восстановления
	Если УправлениеMSSQL.ИзменитьМодельВосстановленияБД("SIMPLE") Тогда
		Сообщить("ИзменитьМодельВосстановленияБД: УСПЕШНО");
	Иначе
		Сообщить("ИзменитьМодельВосстановленияБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;
	
	// Запустим сжатие файлов лога
	Если УправлениеMSSQL.СжатьФайлыБД("LOG") Тогда
		Сообщить("СжатьФайлыБД: УСПЕШНО");
	Иначе
		Сообщить("СжатьФайлыБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Запустим сжатие базы данных
	Если УправлениеMSSQL.СжатьБД() Тогда
		Сообщить("СжатьБД: УСПЕШНО");
	Иначе
		Сообщить("СжатьБД: " + УправлениеMSSQL.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Отчет о работче процедуры
	Сообщить("");
	Сообщить("-----------------------------------------------");
	Сообщить("Результат работы тестирования модуля: " + ?(БылиОшибки,"БЫЛИ ОШИБКИ","УСПЕШНО"));
	Сообщить("-----------------------------------------------");
	Сообщить("");	
	
КонецПроцедуры

//*****************************************************************

// Создадим объект	
УправлениеMSSQL = Новый ТУправлениеMSSQL();

// Введем параметры
ПараметрыПодключения = УправлениеMSSQL.ПараметрыПодключения;
ПараметрыПодключения.АдресСервераSQL = "10.1.1.40";
ПараметрыПодключения.ИмяПользователяSQL = "sa";
ПараметрыПодключения.ПарольПользователяSQL = "pass";
ПараметрыПодключения.ИмяБазыДанныхSQL = "TestBase";

ПолныйТестВсехПроцедур(УправлениеMSSQL)
