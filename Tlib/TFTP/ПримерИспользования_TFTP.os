// При подключении библиотеки необходиомо указать путь к каталогу TFTP с библиотекой TFTP.
// Путь указывается относительно расположения данного файла.
#Использовать "..\TFTP" 

//*****************************************************************
Процедура ПолныйТестВсехПроцедур(ОперацииСFTP, Знач РабочийКаталог="", Знач КаталогНаFTP = "")

	// Флаг наличия ошибок
	БылиОшибки = Ложь;

	// Создадим необходимые файлы
	Если РабочийКаталог = "" Тогда
		РабочийКаталог = ".\";
	КонецЕсли;
	РабочийКаталог = ОбъединитьПути(РабочийКаталог,"Test_TFTP");
	СоздатьКаталог(РабочийКаталог);
	ПолныйПутьКФайлу = ОбъединитьПути(РабочийКаталог,"TestFile.txt");
	ИмяФайлаНаFTP = "TestFile_on_FTP.txt";
	ИмяНовогоКаталога = "Test_TFTP";
	ЗаписьТекста = Новый ЗаписьТекста(ПолныйПутьКФайлу);
	Для Сч = 1 По 60000 Цикл
		ЗаписьТекста.ЗаписатьСтроку("Тестовая строка: " + Сч);
	КонецЦикла;
	ЗаписьТекста.Закрыть();
	ДатаСозданияФайла = ТекущаяДата();
	Приостановить(1000);
	
	// Проверим доступность FTP-сервера
	Если ОперацииСFTP.ПроверитьДоступностьFTP(КаталогНаFTP+"\"+ИмяНовогоКаталога) Тогда
		Сообщить("ПроверитьДоступностьFTP: УСПЕШНО");
	Иначе
		Сообщить("ПроверитьДоступностьFTP: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;
	
	// Создадим каталог на FTP-сервере
	Если ОперацииСFTP.СоздатьКаталогНаFTP(КаталогНаFTP,ИмяНовогоКаталога) Тогда
		Сообщить("СоздатьКаталогНаFTP: УСПЕШНО");
	Иначе
		Сообщить("СоздатьКаталогНаFTP: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Загрузим созданный файл на FTP-сервер
	Если ОперацииСFTP.ЗагрузитьФайлНаFTP(КаталогНаFTP+"\"+ИмяНовогоКаталога,ПолныйПутьКФайлу,ИмяФайлаНаFTP) Тогда
		Сообщить("ЗагрузитьФайлНаFTP: УСПЕШНО");
	Иначе
		Сообщить("ЗагрузитьФайлНаFTP: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Скачаем файл с FTP-сервера
	Если ОперацииСFTP.СкачатьФайлСFTP(КаталогНаFTP+"\"+ИмяНовогоКаталога,ИмяФайлаНаFTP,РабочийКаталог) Тогда
		Сообщить("СкачатьФайлСFTP: УСПЕШНО");
	Иначе
		Сообщить("СкачатьФайлСFTP: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Удалим старые файлы с FTP-сервера
	Если ОперацииСFTP.УдалитьФайлыНаFTPЗагруженныеРаннееДаты(КаталогНаFTP+"\"+ИмяНовогоКаталога,ДатаСозданияФайла+1) Тогда
		Сообщить("УдалитьФайлыНаFTPЗагруженныеРаннееДаты: УСПЕШНО");
	Иначе
		Сообщить("УдалитьФайлыНаFTPЗагруженныеРаннееДаты: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;

	// Удалим каталог с FTP-сервера
	Если ОперацииСFTP.УдалитьКаталогНаFTP(КаталогНаFTP,ИмяНовогоКаталога) Тогда
		Сообщить("УдалитьКаталогНаFTP: УСПЕШНО");
	Иначе
		Сообщить("УдалитьКаталогНаFTP: " + ОперацииСFTP.ТекстОшибки);
		БылиОшибки = Истина;
	КонецЕсли;	

	//Удалим файлы
	УдалитьФайлы(ПолныйПутьКФайлу);
	УдалитьФайлы(ОбъединитьПути(РабочийКаталог,ИмяФайлаНаFTP));
	УдалитьФайлы(РабочийКаталог);
	
	// Отчет о работче процедуры
	Сообщить("");
	Сообщить("-----------------------------------------------");
	Сообщить("Результат работы тестирования модуля: " + ?(БылиОшибки,"БЫЛИ ОШИБКИ","УСПЕШНО"));
	Сообщить("-----------------------------------------------");
	Сообщить("");

КонецПроцедуры

//*****************************************************************

// Создадим объект
ОперацииСFTP = Новый ТОперацииСFTP();

// Введем параметры подключения к FTP-серверу
ПараметрыFTP = ОперацииСFTP.ПараметрыFTP;
ПараметрыFTP.Адрес = "ftp.iis.mydomen.com";
ПараметрыFTP.Порт = "";
ПараметрыFTP.ИмяПользователя = "username_iis";
ПараметрыFTP.ПарольПользователя = "pass_iis";
ПараметрыFTP.ПроверятьРезультат = Истина;

// Запустим тест всех процедур
ПолныйТестВсехПроцедур(ОперацииСFTP);

// Введем параметры подключения к FTP-серверу
ПараметрыFTP.Порт = "";
ПараметрыFTP.Адрес = "ftp.debian.mydomen.com";
ПараметрыFTP.ИмяПользователя = "username_debian";
ПараметрыFTP.ПарольПользователя = "pass_iis";
ПараметрыFTP.ПроверятьРезультат = Ложь;

// Запустим тест всех процедур
ПолныйТестВсехПроцедур(ОперацииСFTP);
